--
-- PostgreSQL database dump
--

-- Dumped from database version 17.4
-- Dumped by pg_dump version 17.4

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET transaction_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

SET default_tablespace = '';

SET default_table_access_method = heap;

--
-- Name: answers; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.answers (
    id bigint NOT NULL,
    question_id bigint NOT NULL,
    survey_response_id bigint NOT NULL,
    text_answer text,
    numeric_answer double precision,
    date_answer date,
    selected_option_id bigint
);


ALTER TABLE public.answers OWNER TO postgres;

--
-- Name: answers_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.answers_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE public.answers_id_seq OWNER TO postgres;

--
-- Name: answers_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.answers_id_seq OWNED BY public.answers.id;


--
-- Name: question_options; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.question_options (
    id bigint NOT NULL,
    question_id bigint NOT NULL,
    text character varying(255) NOT NULL,
    order_index integer
);


ALTER TABLE public.question_options OWNER TO postgres;

--
-- Name: question_options_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.question_options_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE public.question_options_id_seq OWNER TO postgres;

--
-- Name: question_options_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.question_options_id_seq OWNED BY public.question_options.id;


--
-- Name: questions; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.questions (
    id bigint NOT NULL,
    survey_id bigint NOT NULL,
    text character varying(255) NOT NULL,
    question_type character varying(255) NOT NULL,
    order_index integer,
    required boolean DEFAULT false
);


ALTER TABLE public.questions OWNER TO postgres;

--
-- Name: questions_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.questions_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE public.questions_id_seq OWNER TO postgres;

--
-- Name: questions_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.questions_id_seq OWNED BY public.questions.id;


--
-- Name: roles; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.roles (
    id bigint NOT NULL,
    nombre character varying(20),
    CONSTRAINT roles_nombre_check CHECK (((nombre)::text = ANY ((ARRAY['ROL_USUARIO'::character varying, 'ROL_ADMIN'::character varying])::text[])))
);


ALTER TABLE public.roles OWNER TO postgres;

--
-- Name: roles_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.roles ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.roles_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: spring_session; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.spring_session (
    primary_id character(36) NOT NULL,
    session_id character(36) NOT NULL,
    creation_time bigint NOT NULL,
    last_access_time bigint NOT NULL,
    max_inactive_interval integer NOT NULL,
    expiry_time bigint NOT NULL,
    principal_name character varying(100)
);


ALTER TABLE public.spring_session OWNER TO postgres;

--
-- Name: spring_session_attributes; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.spring_session_attributes (
    session_primary_id character(36) NOT NULL,
    attribute_name character varying(200) NOT NULL,
    attribute_bytes bytea NOT NULL
);


ALTER TABLE public.spring_session_attributes OWNER TO postgres;

--
-- Name: survey_responses; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.survey_responses (
    id bigint NOT NULL,
    survey_id bigint NOT NULL,
    respondent_email character varying(255),
    submitted_at timestamp without time zone
);


ALTER TABLE public.survey_responses OWNER TO postgres;

--
-- Name: survey_responses_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.survey_responses_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE public.survey_responses_id_seq OWNER TO postgres;

--
-- Name: survey_responses_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.survey_responses_id_seq OWNED BY public.survey_responses.id;


--
-- Name: surveys; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.surveys (
    id bigint NOT NULL,
    title character varying(255) NOT NULL,
    description character varying(255),
    created_at date,
    updated_at date,
    active boolean DEFAULT true,
    user_id bigint
);


ALTER TABLE public.surveys OWNER TO postgres;

--
-- Name: surveys_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.surveys_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE public.surveys_id_seq OWNER TO postgres;

--
-- Name: surveys_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.surveys_id_seq OWNED BY public.surveys.id;


--
-- Name: usuario_roles; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.usuario_roles (
    usuario_id bigint NOT NULL,
    rol_id bigint NOT NULL
);


ALTER TABLE public.usuario_roles OWNER TO postgres;

--
-- Name: usuarios; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.usuarios (
    id bigint NOT NULL,
    activo boolean NOT NULL,
    apellido character varying(255),
    email character varying(255) NOT NULL,
    nombre character varying(255),
    password character varying(255) NOT NULL,
    username character varying(255) NOT NULL
);


ALTER TABLE public.usuarios OWNER TO postgres;

--
-- Name: usuarios_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.usuarios ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.usuarios_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: answers id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.answers ALTER COLUMN id SET DEFAULT nextval('public.answers_id_seq'::regclass);


--
-- Name: question_options id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.question_options ALTER COLUMN id SET DEFAULT nextval('public.question_options_id_seq'::regclass);


--
-- Name: questions id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.questions ALTER COLUMN id SET DEFAULT nextval('public.questions_id_seq'::regclass);


--
-- Name: survey_responses id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.survey_responses ALTER COLUMN id SET DEFAULT nextval('public.survey_responses_id_seq'::regclass);


--
-- Name: surveys id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.surveys ALTER COLUMN id SET DEFAULT nextval('public.surveys_id_seq'::regclass);


--
-- Data for Name: answers; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.answers (id, question_id, survey_response_id, text_answer, numeric_answer, date_answer, selected_option_id) FROM stdin;
23	82	16	uno	\N	\N	\N
24	83	16	\N	2	\N	\N
25	84	16	\N	\N	2025-06-12	\N
26	85	16	\N	\N	\N	67
27	82	17	mas o menos 	\N	\N	\N
28	83	17	10	\N	\N	\N
29	84	17	Mon, 02 Jun 2025 04:00:00 GMT	\N	\N	\N
30	85	17	Producto 2	\N	\N	\N
31	82	18	mal	\N	\N	\N
32	83	18	\N	1	\N	\N
33	84	18	\N	\N	2025-06-06	\N
34	85	18	\N	\N	\N	66
35	82	19	Esta vez quiero probar de verda ni como se repita la respuesta cmtre	\N	\N	\N
36	83	19	\N	7	\N	\N
37	84	19	\N	\N	2025-06-08	\N
38	85	19	\N	\N	\N	68
39	83	24	\N	1	\N	\N
40	84	24	\N	\N	2025-06-04	\N
41	85	24	\N	\N	\N	66
42	83	25	\N	1000	\N	\N
43	84	25	\N	\N	2025-06-04	\N
44	85	25	\N	\N	\N	66
45	83	26	\N	5050	\N	\N
46	84	26	\N	\N	2025-06-04	\N
47	85	26	\N	\N	\N	66
48	82	27	PORFAVOR ESTA VEZ SI	\N	\N	\N
49	83	27	\N	1	\N	\N
50	84	27	\N	\N	2025-06-02	\N
51	85	27	\N	\N	\N	67
54	93	29	Mala	\N	\N	\N
55	94	29	\N	\N	\N	71
56	93	30	Buena	\N	\N	\N
57	94	30	\N	\N	\N	72
58	93	31	mala	\N	\N	\N
59	94	31	\N	\N	\N	71
60	93	32	buena	\N	\N	\N
61	94	32	\N	\N	\N	72
62	93	33	excelente	\N	\N	\N
63	94	33	\N	\N	\N	73
64	97	34	No	\N	\N	\N
65	98	34	\N	\N	\N	79
66	97	35	no	\N	\N	\N
67	98	35	\N	\N	\N	77
68	97	36	NO	\N	\N	\N
69	98	36	\N	\N	\N	77
70	97	37	Si	\N	\N	\N
71	98	37	\N	\N	\N	76
72	97	38	Si	\N	\N	\N
73	98	38	\N	\N	\N	77
74	97	39	No	\N	\N	\N
75	98	39	\N	\N	\N	79
76	97	40	No	\N	\N	\N
77	98	40	\N	\N	\N	77
\.


--
-- Data for Name: question_options; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.question_options (id, question_id, text, order_index) FROM stdin;
1	1	Excelente	1
2	1	Bueno	2
3	1	Regular	3
4	1	Malo	4
5	1	Excelente	1
6	1	Bueno	2
7	1	Regular	3
8	1	Malo	4
9	3	JavaScript	1
10	3	Python	2
11	3	Java	3
12	4	JavaScript	1
13	4	Python	2
14	4	Java	3
15	7	JavaScript	1
16	7	Python	2
17	7	Java	3
18	10	1	0
19	12	1	0
43	27	Pizza	1
44	27	Hamburguesa	2
45	27	Pasta	3
66	85	Producto 1	0
67	85	Producto 2	1
68	85	Producto 3	2
71	94	Tuto	0
72	94	Samuel Doria	1
73	94	Andronico	2
74	94	Manfred	3
75	94	Dunn	4
76	98	Andronico	0
77	98	Tuto	1
78	98	Evo Morales	2
79	98	Samuel Doria	3
\.


--
-- Data for Name: questions; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.questions (id, survey_id, text, question_type, order_index, required) FROM stdin;
1	1	¨C¢mo calificar¡as nuestro servicio?	SELECCION_UNICA	1	t
2	1	¨Qu‚ sugerencias tienes para nosotros?	AREA_TEXTO	2	f
3	2	¿Cuál es tu lenguaje favorito?	SELECCION_UNICA	1	t
4	2	¿Cuál es tu comida favorito?	SELECCION_UNICA	1	t
5	2	Pregunta intento 1	CAMPO_TEXTO	1	t
6	2	Pregunta intento 3	CAMPO_TEXTO	1	t
7	2	¿Cuál es tu comida favorito?	SELECCION_UNICA	1	t
8	2	Pregunta intento 3	CAMPO_TEXTO	1	t
9	2	Pregunta intento 3	CAMPO_TEXTO	1	t
10	2	Varias Opciones	SELECCION_UNICA	1	t
11	2	Pregunta intento 3	CAMPO_TEXTO	1	t
12	2	Varias Opciones	SELECCION_UNICA	1	t
13	2	Pregunta grande	AREA_TEXTO	1	t
25	3	Cuadro de Texto	CAMPO_TEXTO	0	f
26	3	Fecha	FECHA	1	f
27	7	¿Cuál es tu comida favorita?	OPCION_MULTIPLE	1	t
28	7	¿Qué tan satisfecho estás con nuestro servicio?	CAMPO_TEXTO	2	f
80	28	Encuesta de Satisfaccion del Cliente	TITULO	0	f
81	28	Pregunta sin texto	SEPARADOR	1	f
82	28	Como sintio el producto?	CAMPO_TEXTO	2	f
83	28	cuanto pago por el producto?	CAMPO_NUMERICO	3	f
84	28	La ultima fecha de su compra?	FECHA	4	f
85	28	Varias Opciones	SELECCION_UNICA	5	f
88	29	Encuesta de intencion de Voto	TITULO	0	f
89	29	Pregunta sin texto	SEPARADOR	1	f
90	29	Voto a las elecciones generales	SUBTITULO	2	f
91	29	Pregunta sin texto	SEPARADOR	3	f
92	29	52	CAMPO_ESPACIADOR	4	f
93	29	¿Que perspectiva tiene de los candidatos?	CAMPO_TEXTO	5	f
94	29	¿Por quien votarias estas eleccions?	SELECCION_UNICA	6	f
95	32	Encuestas de voto	TITULO	0	f
96	32	Pregunta sin texto	SEPARADOR	1	f
97	32	conoces a los candidatos?	CAMPO_TEXTO	2	f
98	32	Por quien votarias?	SELECCION_UNICA	3	f
\.


--
-- Data for Name: roles; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.roles (id, nombre) FROM stdin;
1	ROL_ADMIN
2	ROL_USUARIO
\.


--
-- Data for Name: spring_session; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.spring_session (primary_id, session_id, creation_time, last_access_time, max_inactive_interval, expiry_time, principal_name) FROM stdin;
\.


--
-- Data for Name: spring_session_attributes; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.spring_session_attributes (session_primary_id, attribute_name, attribute_bytes) FROM stdin;
\.


--
-- Data for Name: survey_responses; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.survey_responses (id, survey_id, respondent_email, submitted_at) FROM stdin;
1	1	usuario@correo.com	2025-06-01 16:16:53.046985
16	28	cliente@ejemplo.com	2025-06-08 09:15:34.580334
17	28	anonymous@example.com	2025-06-08 09:44:25.693153
18	28	anonymous@example.com	2025-06-08 10:08:40.027969
19	28	anonymous@example.com	2025-06-08 10:18:29.789349
24	28	anonymous@example.com	2025-06-08 13:03:21.241945
25	28	anonymous@example.com	2025-06-08 13:03:50.910327
26	28	anonymous@example.com	2025-06-08 13:06:01.513499
27	28	anonymous@example.com	2025-06-08 13:20:25.32579
28	29	cliente@ejemplo.com	2025-06-08 13:20:41.576054
29	29	anonymous@example.com	2025-06-09 15:42:17.140341
30	29	anonymous@example.com	2025-06-09 15:42:32.041376
31	29	anonymous@example.com	2025-06-09 15:42:47.150639
32	29	anonymous@example.com	2025-06-09 15:43:02.583844
33	29	anonymous@example.com	2025-06-09 15:43:15.023793
34	32	anonymous@example.com	2025-06-10 17:02:35.522426
35	32	anonymous@example.com	2025-06-10 17:02:46.291462
36	32	anonymous@example.com	2025-06-10 17:03:00.315057
37	32	anonymous@example.com	2025-06-10 17:03:13.711455
38	32	anonymous@example.com	2025-06-10 17:03:29.172733
39	32	anonymous@example.com	2025-06-10 17:03:41.664132
40	32	anonymous@example.com	2025-06-10 17:03:59.063828
\.


--
-- Data for Name: surveys; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.surveys (id, title, description, created_at, updated_at, active, user_id) FROM stdin;
1	Encuesta de Satisfacci¢n	Ay£danos a mejorar tu experiencia	2025-06-01	2025-06-01	t	\N
2	Encuesta 1	encuesta de prueba	2025-06-01	2025-06-01	t	\N
3	Encuesta 2	encuesta de prueba2	2025-06-01	2025-06-01	t	\N
5	encuesta-intento-1	Frontend-1	2025-06-01	2025-06-01	t	\N
6	encuesta 2	algo	2025-06-02	2025-06-02	t	\N
7	Encuesta creada por un usuario	Esta encuesta fue creada por un usuario	2025-06-03	2025-06-03	t	2
8	nuevo	nuevo	2025-06-05	2025-06-05	t	2
9	Esta encuesta esta siendo probada	fdjsaljfdlsajfdlsajldsañjfdslfkndlsafndsalfndlsanfdlsa	2025-06-05	2025-06-05	t	2
13	nuevo intento	123	2025-06-05	2025-06-05	t	2
14	otro mas 	123	2025-06-05	2025-06-05	t	2
15	fdsfd	fdsafd	2025-06-05	2025-06-05	t	2
22	probando rutas		2025-06-06	2025-06-06	t	2
23	uno mas porq on		2025-06-06	2025-06-06	t	2
28	Encuesta de Satisfaccion	Esta encuesta mide la satisfaccion del usuario\n	2025-06-08	2025-06-08	t	3
29	nueva encuesta 2	con checkbox y area\n	2025-06-08	2025-06-09	t	3
30	Probando otra encuesta	12312321	2025-06-09	2025-06-09	t	3
31	esta vez ya		2025-06-09	2025-06-09	f	3
32	Encuesta de voto	algo de encuestas	2025-06-10	2025-06-10	t	3
\.


--
-- Data for Name: usuario_roles; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.usuario_roles (usuario_id, rol_id) FROM stdin;
1	1
2	2
3	2
4	2
5	2
6	2
7	2
8	2
9	2
10	2
\.


--
-- Data for Name: usuarios; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.usuarios (id, activo, apellido, email, nombre, password, username) FROM stdin;
1	t	Sistema	admin@universidad.com	Administrador	$2a$10$iUOwwPaan6QBkSSObi6e7.mfZBcAHD5SvVoZeyFvgnqHOSGRvULgC	admin
2	t	admin	admin@mail.com	admin	$2a$10$hdE8ZaD1aPefO4IqmGBfIe3ogMs.FOz8VGYAWogVtcK9sfvcNPdCC	admin1
3	t	cordero	test1@example.com	Iver	$2a$10$lykeCOFuzv94V/xzXc1KPOQ8vyxEdISh2dDVt6wBbLUVVW7hx7th6	intento1
4	t	Pérez	juan@mail.com	Juan	$2a$10$L4OHVfjC7Hz7/b6Q7t1xme1XtDAvOKN2Wpecjrw6GIr5UvVfFwz2C	juan1234
5	t	Pérez	juan2@mail.com	Juan	$2a$10$bxfl606P6LZZn57udXHQjuOQCtJjrlxcGu3zYccfPtTi65pDm57SK	juan12346
6	t	Mamani	imc@gmail.com	Iver	$2a$10$3sadXiEV0gD8SRPEq0YcI.mAW/5HY.PkS1ErO2OIHHlqkg0P5uObK	ivermc
7	t	Test	test@test.com	Test	$2a$10$jJntjTd9WiwNUZ3fPALe3ekVvobjz4AlrA0CWVfGG/hFc.MPxfyHy	Test
8	t	probando	example@example.es	probando	$2a$10$3lbgIetv1MO09U9x3t1z9uDhWUj0BSOzPZ8pdodk1uL95/wSOt16C	example
9	t	otro	otro@gmail.com	otro	$2a$10$SgYEZV4h8FOxslU9VvKEbeq/J5TPshKCBwyXjzDrbaXWEjLGdeSou	otro
10	t	ultima	ultima@gmail.com	ultima	$2a$10$8v9NdWAYahsHToKmh/294uuFGTud64ld76GA.qTp3IaUljBol07F6	ultima
\.


--
-- Name: answers_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.answers_id_seq', 77, true);


--
-- Name: question_options_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.question_options_id_seq', 79, true);


--
-- Name: questions_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.questions_id_seq', 98, true);


--
-- Name: roles_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.roles_id_seq', 2, true);


--
-- Name: survey_responses_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.survey_responses_id_seq', 40, true);


--
-- Name: surveys_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.surveys_id_seq', 32, true);


--
-- Name: usuarios_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.usuarios_id_seq', 10, true);


--
-- Name: answers answers_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.answers
    ADD CONSTRAINT answers_pkey PRIMARY KEY (id);


--
-- Name: question_options question_options_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.question_options
    ADD CONSTRAINT question_options_pkey PRIMARY KEY (id);


--
-- Name: questions questions_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.questions
    ADD CONSTRAINT questions_pkey PRIMARY KEY (id);


--
-- Name: roles roles_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.roles
    ADD CONSTRAINT roles_pkey PRIMARY KEY (id);


--
-- Name: spring_session_attributes spring_session_attributes_pk; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.spring_session_attributes
    ADD CONSTRAINT spring_session_attributes_pk PRIMARY KEY (session_primary_id, attribute_name);


--
-- Name: spring_session spring_session_pk; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.spring_session
    ADD CONSTRAINT spring_session_pk PRIMARY KEY (primary_id);


--
-- Name: survey_responses survey_responses_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.survey_responses
    ADD CONSTRAINT survey_responses_pkey PRIMARY KEY (id);


--
-- Name: surveys surveys_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.surveys
    ADD CONSTRAINT surveys_pkey PRIMARY KEY (id);


--
-- Name: usuarios ukkfsp0s1tflm1cwlj8idhqsad0; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.usuarios
    ADD CONSTRAINT ukkfsp0s1tflm1cwlj8idhqsad0 UNIQUE (email);


--
-- Name: usuarios ukm2dvbwfge291euvmk6vkkocao; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.usuarios
    ADD CONSTRAINT ukm2dvbwfge291euvmk6vkkocao UNIQUE (username);


--
-- Name: usuario_roles usuario_roles_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.usuario_roles
    ADD CONSTRAINT usuario_roles_pkey PRIMARY KEY (usuario_id, rol_id);


--
-- Name: usuarios usuarios_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.usuarios
    ADD CONSTRAINT usuarios_pkey PRIMARY KEY (id);


--
-- Name: spring_session_ix1; Type: INDEX; Schema: public; Owner: postgres
--

CREATE UNIQUE INDEX spring_session_ix1 ON public.spring_session USING btree (session_id);


--
-- Name: spring_session_ix2; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX spring_session_ix2 ON public.spring_session USING btree (expiry_time);


--
-- Name: spring_session_ix3; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX spring_session_ix3 ON public.spring_session USING btree (principal_name);


--
-- Name: answers answers_question_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.answers
    ADD CONSTRAINT answers_question_id_fkey FOREIGN KEY (question_id) REFERENCES public.questions(id);


--
-- Name: answers answers_selected_option_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.answers
    ADD CONSTRAINT answers_selected_option_id_fkey FOREIGN KEY (selected_option_id) REFERENCES public.question_options(id);


--
-- Name: answers answers_survey_response_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.answers
    ADD CONSTRAINT answers_survey_response_id_fkey FOREIGN KEY (survey_response_id) REFERENCES public.survey_responses(id);


--
-- Name: usuario_roles fkbt9i9yrb9ug88xnh82n9m60pr; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.usuario_roles
    ADD CONSTRAINT fkbt9i9yrb9ug88xnh82n9m60pr FOREIGN KEY (rol_id) REFERENCES public.roles(id);


--
-- Name: surveys fksv37tn7cpixbfup5hhe0fkqj2; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.surveys
    ADD CONSTRAINT fksv37tn7cpixbfup5hhe0fkqj2 FOREIGN KEY (user_id) REFERENCES public.usuarios(id);


--
-- Name: usuario_roles fkuu9tea04xb29m2km5lwe46ua; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.usuario_roles
    ADD CONSTRAINT fkuu9tea04xb29m2km5lwe46ua FOREIGN KEY (usuario_id) REFERENCES public.usuarios(id);


--
-- Name: question_options question_options_question_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.question_options
    ADD CONSTRAINT question_options_question_id_fkey FOREIGN KEY (question_id) REFERENCES public.questions(id);


--
-- Name: questions questions_survey_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.questions
    ADD CONSTRAINT questions_survey_id_fkey FOREIGN KEY (survey_id) REFERENCES public.surveys(id);


--
-- Name: spring_session_attributes spring_session_attributes_fk; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.spring_session_attributes
    ADD CONSTRAINT spring_session_attributes_fk FOREIGN KEY (session_primary_id) REFERENCES public.spring_session(primary_id) ON DELETE CASCADE;


--
-- Name: survey_responses survey_responses_survey_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.survey_responses
    ADD CONSTRAINT survey_responses_survey_id_fkey FOREIGN KEY (survey_id) REFERENCES public.surveys(id);


--
-- PostgreSQL database dump complete
--

